!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC=clang$/;"	m
FAIL	equation_challenge.c	10;"	d	file:
MAX_INT	equation_challenge.c	12;"	d	file:
MAX_NUM_COUNT	equation_challenge.c	13;"	d	file:
MAX_OP_COUNT	equation_challenge.c	14;"	d	file:
SUCCESS	equation_challenge.c	11;"	d	file:
Stack_c	equation_challenge.c	/^} Stack_c; \/\/ char stack$/;"	t	typeref:struct:__anon2	file:
Stack_i	equation_challenge.c	/^} Stack_i; \/\/ int stack$/;"	t	typeref:struct:__anon1	file:
count	equation_challenge.c	/^	int count;$/;"	m	struct:__anon1	file:
count	equation_challenge.c	/^	int count;$/;"	m	struct:__anon2	file:
curr_num_stack	equation_challenge.c	/^int curr_num_stack;$/;"	v
curr_op_stack	equation_challenge.c	/^int curr_op_stack;$/;"	v
evaluate	equation_challenge.c	/^int evaluate(int a, char op, int b, int *answer)$/;"	f
generate_one_equation	equation_challenge.c	/^int generate_one_equation(char *equation)$/;"	f
get_str_end	equation_challenge.c	/^int get_str_end(char* str) $/;"	f
itos	equation_challenge.c	/^int itos(int num, char *str)$/;"	f
main	equation_challenge.c	/^main(int argc, char** argv) {$/;"	f
num_stack	equation_challenge.c	/^Stack_i num_stack;$/;"	v
op_stack	equation_challenge.c	/^Stack_c op_stack;$/;"	v
operator_list	equation_challenge.c	/^char operator_list[] = {'+', '-', '*', '\/'} ;$/;"	v
peek_op	equation_challenge.c	/^int peek_op(char *op)$/;"	f
pop_num	equation_challenge.c	/^int pop_num(int *num)$/;"	f
pop_op	equation_challenge.c	/^int pop_op(char *op)$/;"	f
push_num	equation_challenge.c	/^int push_num(int num)$/;"	f
push_op	equation_challenge.c	/^int push_op(char op)$/;"	f
random_in_range	equation_challenge.c	/^uint32_t random_in_range(uint32_t min, uint32_t max)$/;"	f
reverse	equation_challenge.c	/^void reverse(char *str, int len)$/;"	f
satisfy_paren	equation_challenge.c	/^int satisfy_paren()$/;"	f
solve_equation	equation_challenge.c	/^int solve_equation(char* str, int *answer)$/;"	f
stak	equation_challenge.c	/^	char stak[MAX_NUM_COUNT+1];$/;"	m	struct:__anon2	file:
stak	equation_challenge.c	/^	int stak[MAX_NUM_COUNT+1];$/;"	m	struct:__anon1	file:
stoi	equation_challenge.c	/^int stoi(char *str, int *moved)$/;"	f
